# This example shows how to add a Ocean Spark profile in the
# list of Jupyter profiles in JupyterHub.
# A JupyterHub profile will launch notebook kernels on Ocean Spark only
# if it contains a `oceanspark_url` in `kubespawner_override` (see below).
#
# Please set the `oceanspark_url` to your own Ocean Spark URL.
# The file `oceanspark.py` works as is and should not need to be adapted.
proxy:
    # Generate a custom secret for your installation with:
    #
    #   openssl rand -hex 32
    #
    secretToken: ea1a28fc09fff627f32dea783d658707cf8d35f8b98fdd4a98c5a0c8d5ba4920
singleuser:
    profileList:
    -   display_name: Default Jupyter profile
        description: This is the default Jupyter server. This is not using Ocean Spark.
        default: true
    -   display_name: Ocean Spark
        description: Your code will run on the Ocean Spark platform with Spark support.
        kubespawner_override:
            oceanspark_cluster_id: osc-xxxxxx
hub:
  extraConfig:
    oceanspark.py: |
        from kubespawner import KubeSpawner
        from traitlets import Unicode

        class OceanSparkProfileKubeSpawner(KubeSpawner):
            """A KubeSpawner subclass that launches notebook kernels on the
            Ocean Spark platform rather than on a Jupyter server pod.
            This behavior is activated only if the config cluster_id is set
            in the profile's kubespawner_override.
            """

            oceanspark_url = Unicode(
                None,
                allow_none=True,
                config=True,
                help="""
                The URL to your Ocean Spark platform notebook API.
                Typically: https://api.spotinst.io/ocean/spark/cluster/<cluster-id>/notebook
                """,
            )

            async def options_from_form(self, form_data):
                options = super().options_from_form(form_data)
                if "profile" in form_data:
                    self.log.info("A profile was selected")
                    profile_id = int(form_data["profile"][0])
                    profile_dict = None
                    profile_dict = self.profile_list[profile_id]
                    if "kubespawner_override" in profile_dict and "oceanspark_url" in profile_dict["kubespawner_override"]:
                        self.log.info("A gateway URL was found")
                        options["oceanspark_url"] = profile_dict["kubespawner_override"]["oceanspark_url"]
                        options["oceanspark_api_key"] = form_data[f"api_key-{profile_id}"][0]
                    else:
                        self.log.info("No gateway URL found")
                else:
                    self.log.info("No profile was selected")
                return options

            async def load_user_options(self):
                await super().load_user_options()
                if "oceanspark_url" in self.user_options:
                    oceanspark_url = self.user_options["oceanspark_url"]
                    oceanspark_api_key = self.user_options["oceanspark_api_key"]
                    self.args = [
                        f"--gateway-url={oceanspark_url}",
                        f"--GatewayClient.auth_token={oceanspark_api_key}",
                        "--GatewayClient.request_timeout=600",
                    ]
                    self.log.info("Using Ocean Spark. Args: " + " ".join(self.args))
                else:
                    self.log.info("Not using Ocean Spark")

        c.JupyterHub.spawner_class = OceanSparkProfileKubeSpawner
        c.KubeSpawner.profile_form_template = """
            <script>
            // JupyterHub 0.8 applied form-control indisciminately to all form elements.
            // Can be removed once we stop supporting JupyterHub 0.8
            $(document).ready(function() {
                $('#kubespawner-profiles-list input[type="radio"]').removeClass('form-control');
            });
            </script>
            <style>
            /* The profile description should not be bold, even though it is inside the <label> tag */
            #kubespawner-profiles-list label p {
                font-weight: normal;
            }
            </style>
            <div class='form-group' id='kubespawner-profiles-list'>
            {% for profile in profile_list %}
            <label for='profile-item-{{ loop.index0 }}' class='form-control input-group'>
                <div class='col-md-1'>
                    <input type='radio' name='profile' id='profile-item-{{ loop.index0 }}' value='{{ loop.index0 }}' {% if profile.default %}checked{% endif %} />
                </div>
                <div class='col-md-11'>
                    <strong>{{ profile.display_name }}</strong>
                    {% if profile.description %}
                    <p>{{ profile.description }}</p>
                    {% endif %}
                    {% if profile.kubespawner_override and profile.kubespawner_override.oceanspark_url %}
                    Please enter a Ocean Spark API key: <input name="api_key-{{ loop.index0 }}" />
                    {% endif %}
                </div>
            </label>
            {% endfor %}
            </div>
        """
